packer {
  required_plugins {
    proxmox = {
      version = ">= 1.1.2"
      source  = "github.com/hashicorp/proxmox"
    }
  }
}
locals {
  timestamp_date = "${formatdate("YYMMDD",timestamp())}"
  timestamp_time = "${formatdate("hhmmss",timestamp())}"
  template_name  = "${formatdate("YYMMDD",timestamp())}${formatdate("hhmmss",timestamp())}-DockerRockyLinux9"
}


variable "centos_image" {
  type    = string
  default = "Rocky-9.2-x86_64-dvd.iso"
}

variable "proxmox_iso_pool" {
  type    = string
  default = "local:iso"
}

variable "proxmox_node" {
  type    = string
  default = "pve"
}

variable "proxmox_storage_format" {
  type    = string
  default = "raw"
}

variable "proxmox_storage_pool" {
  type    = string
  default = "local-lvm"
}

variable "proxmox_storage_pool_type" {
  type    = string
  default = "LVM-Thin"
}

variable "proxmox_url" {
  type    = string
}

variable "proxmox_username" {
  type    = string
}
variable "proxmox_token" {
  type = string
}

variable "proxmox_password" {
  type = string
  default = ""
}

variable "template_description" {
  type    = string
  default = "Rocky Linux 9 Docker setup"
}

variable "template_name" {
  type    = string
  default = "Rocky9VM"
}

variable "version" {
  type    = string
  default = ""
}

source "proxmox-iso" "autogenerated" {
  boot_command = ["<tab> text inst.ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/inst.ks<enter><wait>"]
  boot_wait    = "10s"
  cores        = "2"
  cpu_type     = "Nehalem"
  disks {
    disk_size         = "64G"
    format            = "${var.proxmox_storage_format}"
    storage_pool      = "${var.proxmox_storage_pool}"
    storage_pool_type = "${var.proxmox_storage_pool_type}"
    type              = "scsi"
  }
  http_directory           = "ks" # same as Folder name
  insecure_skip_tls_verify = true
  iso_file                 = "${var.proxmox_iso_pool}/${var.centos_image}"
  memory                   = "4192"
  network_adapters {
    bridge = "vmbr0"
    model  = "virtio"
  }
  node                 = "${var.proxmox_node}"
  os                   = "l26"
  vm_id                = 1000
  password             = "${var.proxmox_password}"
  proxmox_url          = "${var.proxmox_url}"
  scsi_controller      = "virtio-scsi-single"
  token                = "${var.proxmox_token}"
  ssh_port             = 22
  ssh_timeout          = "25m"
  ssh_username         = "root"
  ssh_password         = "Packer"
  template_description = "${var.template_description}"
  template_name        = "${local.template_name}"
  unmount_iso          = true
  username             = "${var.proxmox_username}"
  cloud_init           = true
  cloud_init_storage_pool = "${var.proxmox_storage_pool}"
}

build {
  sources = ["source.proxmox-iso.autogenerated"]

  provisioner "shell" {
    script = "${path.root}/Scripts/provisions.sh"
  }

  provisioner "shell" {
    script = "${path.root}/Scripts/Consul.sh"
  }

  #provision profile
  provisioner "file" {
    source      = "${path.root}/Scripts/bootstrap.sh"
    destination = "/tmp/bootstrap.sh"
  }

  provisioner "shell" {
    inline = ["echo 'Installing custom scripts'",
              "yum install -y cloud-init qemu-guest-agent cloud-utils-growpart gdisk",
              "systemctl enable qemu-guest-agent",
              "shred -u /etc/ssh/*_key /etc/ssh/*_key.pub",
              "rm -f /var/run/utmp",
              ">/var/log/lastlog",
              ">/var/log/wtmp", ">/var/log/btmp",
              "rm -rf /tmp/* /var/tmp/*",
              "unset HISTFILE; rm -rf /home/*/.*history /root/.*history",
              "rm -f /root/*ks",
              "passwd -d root",
              "passwd -l root",
              "rm -f /etc/ssh/ssh_config.d/allow-root-ssh.conf"
          ]
    only   = ["proxmox"]
  }
}
